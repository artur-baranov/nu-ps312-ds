[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PS312 Statistical Research Methods",
    "section": "",
    "text": "PS 312 • Spring 2025  Department of Political Science\n\nNorthwestern University\n\n\nThis site is designed to support students enrolled in the PS312 Statistical Research Methods course. In the section, we will focus on coding and practicing the concepts covered in the lectures.\n\n\n\n\n\n   Thursday\n   University Hall 412\n   artur.baranov@u.northwestern.edu\n\n\n\n\n\n\n   Monday\n   Scott Hall 110\n   11:00 AM – 12:30 PM"
  },
  {
    "objectID": "index.html#description",
    "href": "index.html#description",
    "title": "PS312 Statistical Research Methods",
    "section": "",
    "text": "PS 312 • Spring 2025  Department of Political Science\n\nNorthwestern University\n\n\nThis site is designed to support students enrolled in the PS312 Statistical Research Methods course. In the section, we will focus on coding and practicing the concepts covered in the lectures.\n\n\n\n\n\n   Thursday\n   University Hall 412\n   artur.baranov@u.northwestern.edu\n\n\n\n\n\n\n   Monday\n   Scott Hall 110\n   11:00 AM – 12:30 PM"
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "PS312 Statistical Research Methods",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\nWeek\n\n\nTitle\n\n\nLink\n\n\nCode\n\n\nData\n\n\n\n\n\n\n1\n\n\nIntroduction to Statistical Methods\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\nExploring Data\n\n\n\n\n\n\n\n\n\n\n\n\n\n3\n\n\nData Structures and Classes\n\n\n\n\n\n\n\n\n \n\n\n\n\n4\n\n\nStatistical Tests\n\n\n\n\n\n\n\n\n\n\n\n\n\n5\n\n\nOLS Regression\n\n\n\n\n\n\n\n\n\n\n\n\n\n6\n\n\nRegression Extensions\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "ps312-d_01.html",
    "href": "ps312-d_01.html",
    "title": "Introduction to Statistical Methods",
    "section": "",
    "text": "artur-baranov.github.io/nu-ps312-ds\n\n\nlibrary(qrcode)\nqr_code('https://artur-baranov.github.io/nu-ps312-ds') |&gt;\n  plot()\n\n\n\n\n\n\n\n\n\n\nFirst of all, introduction time!\n\nYour name\nYour interest in the political science\nYour previous experience with R\n\n\n\n\n\nGetting used to work in RStudio\nLoading data into R\nPracticing asking statistical questions"
  },
  {
    "objectID": "ps312-d_00.html",
    "href": "ps312-d_00.html",
    "title": "Installing R and RStudio",
    "section": "",
    "text": "Installing R and RStudio\nFirst, we need to install R. Click the button below and click “Download and Install R”. Choose your OS. For Windows you need to download “base”; for MacOS and Linux you have to choose the version of your OS. Install.\n\nDownload R\n\n\n\nStep one\n\n\n\n\nFor windows:\n\n\n\n\nSecond, we need to install RStudio. Click the button below and click “Download RStudio Desktop”. You will be redirected to your version automatically. Install.\n\nDownload RStudio\n\n\n\nStep two"
  },
  {
    "objectID": "ps312-d_01.html#how-we-work",
    "href": "ps312-d_01.html#how-we-work",
    "title": "Introduction to Statistical Methods",
    "section": "How we work",
    "text": "How we work\n\nCreate a folder for the PS312 discussion section.\nDownload the script and the data, and put them into the created folder.\nFollow the script throughout the discussion section, run the code.\nExplore the syntax. Amend the code after the class, play with graphs and functions. Experiment!\n\n\n\nDownload script\n\n\n\nDownload data\n\n\nYou can install R and RStudio, instructions are available here. Alternatively, feel free to use Posit.Cloud"
  },
  {
    "objectID": "ps312-d_01.html#agenda",
    "href": "ps312-d_01.html#agenda",
    "title": "Introduction to Statistical Methods",
    "section": "",
    "text": "Getting used to work in RStudio\nLoading data into R\nPracticing asking statistical questions"
  },
  {
    "objectID": "ps312-d_01.html#coding-terminology",
    "href": "ps312-d_01.html#coding-terminology",
    "title": "Introduction to Statistical Methods",
    "section": "Coding Terminology",
    "text": "Coding Terminology\n\nCode Chunk\nTo insert a Code Chunk, you can use Ctrl+Alt+I on Windows and Cmd+Option+I on Mac. Run the whole chunk by clicking the green triangle, or one/multiple lines by using Ctrl + Enter or Command + Return on Mac.\n\nprint(\"Code Chunk\")\n\n[1] \"Code Chunk\"\n\n\n\n\nFunction and Arguments\nMost of the functions we want to run require an argument For example, the function print() above takes the argument “Code Chunk”.\n\nfunction(argument)"
  },
  {
    "objectID": "ps312-d_01.html#navigating-rstudio",
    "href": "ps312-d_01.html#navigating-rstudio",
    "title": "Introduction to Statistical Methods",
    "section": "Navigating RStudio",
    "text": "Navigating RStudio\nIt will take some time to understand how everything works in RStudio, but once you understand it, it’s quite straightforward. The most classic UI consists of four panes.\n\nSource. Here we write code to run and text.\nEnvironment. This pane allows you to interact with the data loaded into RStudio.\nConsole. This pane provides an area to interactively execute code.\nFiles. By default, this pane has your working directory. From here you can access files associated with the project.\n\n\n\n\nR User Interface"
  },
  {
    "objectID": "ps312-d_01.html#markdown-and-quarto",
    "href": "ps312-d_01.html#markdown-and-quarto",
    "title": "Introduction to Statistical Methods",
    "section": "Markdown and Quarto",
    "text": "Markdown and Quarto\nThis whole website was built using R, Markdown and Quarto. Let’s quickly overview these languages\nIn RStudio, you can use Markdown language to format text.\nFor example, this is bold text and this is italic text. And, of course, you can insert images. It’s pretty easy, and after the class you can take a look at some tutorials.\n\n\n\nNorthwestern Logo\n\n\nYou can do many-many more different things. In this regard, visual editor in RStudio might be helpful. Markdown is also used in several note taking apps, e.g. Obsidian or Notion. Feel free to utilize your Markdown knowledge for your studies.\nGenerally, what we’ve done so far can be described by the image below. We have used R (“engine”) and RStudio (“car”). In Rstudio we have Quarto, which is this document you are working with right now. We can do a lot of things right away – e.g., render our output to a Word document, PDF or HTML.\n\n\n\nR software"
  },
  {
    "objectID": "ps312-d_01.html#libraries",
    "href": "ps312-d_01.html#libraries",
    "title": "Introduction to Statistical Methods",
    "section": "Libraries",
    "text": "Libraries\nQuite often we rely on non-native functions. To use them, we need to first install and then load libraries. Let’s do it step-by-step,\nFirstly, let’s install a package tidyverse. Run the chunk below only once! Generally, it’s considered to be a good manner to remove install.packages() command from scripts.\n\ninstall.packages(\"tidyverse\")\n\nMake sure you removed the chunk with install.packages() function. Now, load the library to the current R session. We’ll be working with this library extensively throughout the quarter.\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "ps312-d_01.html#descriptive-statistics",
    "href": "ps312-d_01.html#descriptive-statistics",
    "title": "Introduction to Statistical Methods",
    "section": "Descriptive Statistics",
    "text": "Descriptive Statistics\nWhat is the happiest country?\n\nwhr %&gt;%\n  select(Country_name, Ladder_score) %&gt;%\n  arrange(-Ladder_score) %&gt;%\n  head(1)\n\n# A tibble: 1 × 2\n  Country_name Ladder_score\n  &lt;chr&gt;               &lt;dbl&gt;\n1 Finland              7.80\n\n\nWhat is the least happy country?\n\nwhr %&gt;%\n  select(Country_name, Ladder_score) %&gt;%\n  arrange(Ladder_score) %&gt;%\n  head(1)\n\n# A tibble: 1 × 2\n  Country_name Ladder_score\n  &lt;chr&gt;               &lt;dbl&gt;\n1 Afghanistan          1.86\n\n\nHow happy are the countries?\n\nggplot(data = whr) +\n  geom_histogram(aes(x = Ladder_score))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nThese questions, though interesting, allow us only to be informed about the ‘facts’ or the data we are working with. To put such information into a good use, let’s discuss descriptive statistics."
  },
  {
    "objectID": "ps312-d_01.html#relationships-between-the-variables",
    "href": "ps312-d_01.html#relationships-between-the-variables",
    "title": "Introduction to Statistical Methods",
    "section": "Relationships between the variables",
    "text": "Relationships between the variables\nLet’s start to explore more interesting patterns. Regularly, the starting point is a normative question. For example, how to make our country happier?.\n\n\n\n\n\n\nQustion\n\n\n\n\nHow would you answer this question and what would you need to answer this question?\nThink through the question, how can you make it a statistical research question?\n\n\n\nWe are researching causal relations. But on initial steps, we quite often start with correlations. Let’s focus on the relationship between happinness and wealth measured as GDP.\n\n\n\n\n\n\nQustion\n\n\n\nWhat type of the relationship is between Happiness and Wealth? Is it strong? What is the direction?\n\ncor(whr$Ladder_score, whr$Logged_GDP_per_capita)\n\n[1] 0.7843673\n\n\n\n\nLet’s visualize this relationship.As a rule of thumb, when speaking about a relationship whose causal nature we have not definitively determined, we say there is an association between X and Y. Is there one?\n\nggplot(data = whr, aes(x = Logged_GDP_per_capita, y = Ladder_score)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(x = \"Wealth\",\n       y = \"Happiness\")"
  },
  {
    "objectID": "ps312-d_01.html#code-chunk",
    "href": "ps312-d_01.html#code-chunk",
    "title": "Introduction to Statistical Methods",
    "section": "Code Chunk",
    "text": "Code Chunk\nTo insert a Code Chunk, you can use Ctrl+Alt+I on Windows and Cmd+Option+I on Mac. Run the whole chunk by clicking the green triangle, or one/multiple lines by using Ctrl + Enter or Command + Return on Mac.\n\nprint(\"Code Chunk\")\n\n[1] \"Code Chunk\"\n\n\n\n\n\n\n\n\nCoding Task\n\n\n\nInsert a chunk. Print “Northwestern”."
  },
  {
    "objectID": "ps312-d_01.html#function-and-arguments",
    "href": "ps312-d_01.html#function-and-arguments",
    "title": "Introduction to Statistical Methods",
    "section": "Function and Arguments",
    "text": "Function and Arguments\nMost of the functions we want to run require an argument. For example, the function print() above takes the argument “Code Chunk”.\n\nfunction(argument)"
  },
  {
    "objectID": "ps312-d_01.html#pipes",
    "href": "ps312-d_01.html#pipes",
    "title": "Introduction to Statistical Methods",
    "section": "Pipes",
    "text": "Pipes\nPipes (%&gt;% or |&gt;) are helpful for streamlining the coding. They introduce linearity to the process of writing the code. In plain English, a pipe translates to “take an object, and then”.\n\nnumbers = c(1, 2, 3) # a vector object\n\nnumbers |&gt;\n  print()\n\n[1] 1 2 3"
  },
  {
    "objectID": "ps312-d_01.html#exctracting-facts-from-the-data",
    "href": "ps312-d_01.html#exctracting-facts-from-the-data",
    "title": "Introduction to Statistical Methods",
    "section": "Exctracting Facts from the Data",
    "text": "Exctracting Facts from the Data\nOften we start with descriptive questions.\nWhat is the happiest country?\n\nwhr %&gt;%\n  select(Country_name, Ladder_score) %&gt;% # choosing the variables\n  arrange(-Ladder_score) %&gt;%             # arranging data in descending order\n  head(1)                                # leaving the first observation\n\n# A tibble: 1 × 2\n  Country_name Ladder_score\n  &lt;chr&gt;               &lt;dbl&gt;\n1 Finland              7.80\n\n\nWhat is the least happy country?\n\nwhr %&gt;%\n  select(Country_name, Ladder_score) %&gt;% # choosing the variables\n  arrange(Ladder_score) %&gt;%              # arranging data in ascending order\n  head(1)                                # leaving the first observation\n\n# A tibble: 1 × 2\n  Country_name Ladder_score\n  &lt;chr&gt;               &lt;dbl&gt;\n1 Afghanistan          1.86\n\n\nHow happy are the countries?\n\nggplot(data = whr) +\n  geom_histogram(aes(x = Ladder_score))\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nThese questions allow us to be informed only about the ‘facts’ or the data we are working with. Though quite descriptive, they provide some intuition about what’s happening. What are some potentially intriguing patterns you observe in the graph above?"
  },
  {
    "objectID": "ps312-d_01.html#tips-for-thinking-about-statistical-relationships",
    "href": "ps312-d_01.html#tips-for-thinking-about-statistical-relationships",
    "title": "Introduction to Statistical Methods",
    "section": "Tips for Thinking About Statistical Relationships",
    "text": "Tips for Thinking About Statistical Relationships\n\nAsk yourself: what are you interested in? Then, identify what is your dependent (i.e., what are you explaining) and independent variables (i.e., what is the explanatory factor).\nDo not underestimate the exploratory analysis. Explore your data! Get as much information as possible, find patterns and explore the relations between various variables of your interest\nThink about causality. Are you sure that your independent variable causes change in dependent variable?"
  },
  {
    "objectID": "ps312-d_01.html#getting-to-know-each-other",
    "href": "ps312-d_01.html#getting-to-know-each-other",
    "title": "Introduction to Statistical Methods",
    "section": "",
    "text": "First of all, introduction time!\n\nYour name\nYour interest in the political science\nYour previous experience with R"
  },
  {
    "objectID": "ps312-d_02.html",
    "href": "ps312-d_02.html",
    "title": "Exploring Data",
    "section": "",
    "text": "No Thursday discussion section next week\nBut! Script will be published on the website. Go through it! Data classes will be discussed there!\nQuestions regarding Lab Assignment or the class?\n\n\n\nDownload script\n\n\n\nDownload data"
  },
  {
    "objectID": "ps312-d_02.html#markdown-and-quarto",
    "href": "ps312-d_02.html#markdown-and-quarto",
    "title": "ps312-d_02",
    "section": "",
    "text": "This whole website was built using R, Markdown and Quarto. Let’s quickly overview these languages\nIn RStudio, you can use Markdown language to format text.\nFor example, this is bold text and this is italic text. And, of course, you can insert images. It’s pretty easy, and after the class you can take a look at some tutorials.\n\n\n\nNorthwestern Logo\n\n\nYou can do many-many more different things. In this regard, visual editor in RStudio might be helpful. Markdown is also used in several note taking apps, e.g. Obsidian or Notion. Feel free to utilize your Markdown knowledge for your studies.\nGenerally, what we’ve done so far can be described by the image below. We have used R (“engine”) and RStudio (“car”). In Rstudio we have Quarto, which is this document you are working with right now. We can do a lot of things right away – e.g., render our output to a Word document, PDF or HTML.\n\n\n\nR software"
  },
  {
    "objectID": "ps312-d_02.html#substantive",
    "href": "ps312-d_02.html#substantive",
    "title": "Exploring Data",
    "section": "Substantive",
    "text": "Substantive\n\nWhat is a Causal Relation?\nWhat is Confounder?\nIndependent Variable vs Dependent Variable?\nControl Variable?"
  },
  {
    "objectID": "ps312-d_02.html#coding",
    "href": "ps312-d_02.html#coding",
    "title": "Exploring Data",
    "section": "Coding",
    "text": "Coding\n\nWhat is a Chunk?\nWhat is a CSV file? How is it different from Excel file?"
  },
  {
    "objectID": "ps312-d_03.html",
    "href": "ps312-d_03.html",
    "title": "Data Structures and Classes",
    "section": "",
    "text": "Delving into data structures\nDiscussing data classes"
  },
  {
    "objectID": "ps312-d_03.html#vectors",
    "href": "ps312-d_03.html#vectors",
    "title": "Data Structures and Classes",
    "section": "Vectors",
    "text": "Vectors\nLet’s say we asked a group of people their ages in an Evanston coffee shop. We obtained the following data and assigned it to an object called age. The collection of obects called vector.\n\nage = c(18, 20, 21, 19, 24, 21, 20, 22)\n\nYou can access the data using indexing. Let’s say you entered the data into your object age as you were receiving the results. You can access the age of your second respondent by indicating [i] to an object.\n\nage[2]\n\n[1] 20\n\n\nwe can calculate the average age in our surveyed group.\n\nmean(age)\n\n[1] 20.625\n\n\nAlternatively, we can describe our data with minimum and maximum values.\n\nmin(age)\nmax(age)\n\n[1] 18\n[1] 24\n\n\nWe also asked people in the coffee shop about their majors and received the following data:\n\nmajor = c(\"computer science\", \"sociology\", \"sociology\", \"political science\", \"political science\", \"political science\", \"computer science\", \"sociology\")\n\n\n\n\n\n\n\nCoding Task\n\n\n\nInsert a chunk and access major of the 3rd respondent."
  },
  {
    "objectID": "ps312-d_03.html#dataframes",
    "href": "ps312-d_03.html#dataframes",
    "title": "Data Structures and Classes",
    "section": "Dataframes",
    "text": "Dataframes\nA dataframe is one of the most commonly used data structures in data analysis. It is a simple table, similar to those you have probably seen in Excel. Let’s create one. We have two vectors, age and major. We can combine them into one table.\n\nrespondents = data.frame(age, major)\nrespondents\n\n  age             major\n1  18  computer science\n2  20         sociology\n3  21         sociology\n4  19 political science\n5  24 political science\n6  21 political science\n7  20  computer science\n8  22         sociology\n\n\nColumns are vectors. In a table format they are referred to as variables (and thus these labels are used interchangeably). Rows are called observations. There are some useful commands that provide information about your dataframe.\n\nNames of your variables\n\n\nnames(respondents)\n\n[1] \"age\"   \"major\"\n\n\n\nNumber of rows in your dataframe\n\n\nnrow(respondents)\n\n[1] 8\n\n\n\nNumber of columns in your dataframe\n\n\nncol(respondents)\n\n[1] 2\n\n\n\nNumber of dimensions (number of rows and columns)\n\n\ndim(respondents)\n\n[1] 8 2\n\n\nTo access a variable as vector you can use $ sign.\n\nrespondents$age\n\n[1] 18 20 21 19 24 21 20 22\n\n\nThis would allow you to manipulate this variable. For example, let’s visualize this data!\n\nhist(respondents$age)\n\n\n\n\n\n\n\n\nYou can easily combine previously used functions. For example, indexing provides access to any observation.\n\nrespondents$major[8]\n\n[1] \"sociology\"\n\n\n\n\n\n\n\n\nCoding Task\n\n\n\nLoad the data below and explore it. This is the embedded to R dataset, so you don’t need to load it externally.\n\ncars_information = mtcars\n\nHow many cars are listed in the dataframe (how many rows are there)?\nDescribe mpg variable. Include average, minimum and maximum.\nWhat is the minimum horsepower (hp)?\nAre there any cars that have horse power greater than 200 but less than 250?\nCreate a new variable called power_to_weight, which calculates the ratio of horsepower (hp) to weight (wt). You need to divide horsepower by weight. Use the snippet below.\n\ncars_information$power_to_weight = ... / ...\n\nWhat is an average Power to Weight Ratio?\nWhat is a minimum Power to Weight Ratio?\nCreate a histogram of power_to_weight variable. Hint: you can use previous discussion section scripts to get the code."
  },
  {
    "objectID": "ps312-d_04.html",
    "href": "ps312-d_04.html",
    "title": "Statistical Tests",
    "section": "",
    "text": "Questions regarding Lab Assignment or the class?\n\n\n\nDownload script\n\n\n\nDownload data"
  },
  {
    "objectID": "ps312-d_04.html#analyzing-missing-data",
    "href": "ps312-d_04.html#analyzing-missing-data",
    "title": "Statistical Tests",
    "section": "Analyzing missing data",
    "text": "Analyzing missing data\nNow, we likely got a missing values as a result of the merger. The problem might arise due to the different spellings or absence of observation for specific year-country in one of the datasets.\nStart with is.na() – it checks if there are any missing values. And now, we can easily count if there are any missing values. Everything is here! Makes sense as we used left_join() to attach variables to WHR data.\n\nis.na(whr_vdem$Ladder_score) %&gt;%\n  sum()\n\n[1] 0\n\n\nHowever, the potential missingness might be in the “right” part of the merge, namely the V-Dem data. Let’s check it, too.\n\nis.na(whr_vdem$regime_categorical) %&gt;%\n  sum()\n\n[1] 22\n\n\nWhy this might be the case? Let’s explore. Using mutate() create an indicator variable for the missing values first. Then, using filter() let’s leave only missing values. And finally, using select() let’s leave only country names. What these observations have in common?\n\nmissing_data = whr_vdem %&gt;%\n  mutate(missing = is.na(regime_categorical)) %&gt;% # create indicator variable for missing data\n  filter(missing == TRUE) %&gt;%                     # leave only rows with missing regime type\n  select(Country_name)                            # choose the Country_name column\n\nmissing_data %&gt;%\n  head()\n\n               Country_name\n1             United States\n2  Taiwan Province of China\n3                Kazakhstan\n4                   Algeria\n5 Hong Kong S.A.R. of China\n6       Congo (Brazzaville)\n\n\nLet’s see how these are spelled in the V-Dem data. For example, let’s take how “United States” can be spelled. Using str_view() we can identify if the pattern exists in vdem_2022 dataframe.\n\nstr_view(vdem_2022$country_name, \"United States\")\n\n[16] │ &lt;United States&gt; of America\n\n\nNow, let’s see why there is no Kazakhstan. It is definitely missing! Probably, it was not yet ranked by V-Dem.\n\nvdem_2022 %&gt;%\n  filter(country_name == \"Kazakhstan\")\n\n  country_name year regime regime_categorical\n1   Kazakhstan 2022     NA               &lt;NA&gt;\n\n\nAll in all, these issues related to the most frequent reasons why data might be missing after merging:\n\n“Key” variables are spelled differently\nThe data is not available in one of the datasets\n\nWe’ll stick to removing NAs from the dataset using na.omit(). Check out tips in the end of the script to dig into other solutions to the problem of missing values.\n\nwhr_vdem = whr_vdem %&gt;% \n  na.omit()"
  },
  {
    "objectID": "index.html#additional-resources",
    "href": "index.html#additional-resources",
    "title": "PS312 Statistical Research Methods",
    "section": "Additional Resources",
    "text": "Additional Resources\n\n\n\n\n\nTitle\n\n\nLink\n\n\n\n\n\n\nInstalling R and RStudio\n\n\n\n\n\n\n\nJoining Data in R with dplyr\n\n\n\n\n\n\n\nPolitical Science datasets\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "ps312-d_05.html",
    "href": "ps312-d_05.html",
    "title": "OLS Regression",
    "section": "",
    "text": "Questions regarding Lab Assignment or the class?\n\n\n\nDownload script\n\n\n\nDownload data"
  },
  {
    "objectID": "ps312-d_05.html#economic-controls",
    "href": "ps312-d_05.html#economic-controls",
    "title": "OLS Regression",
    "section": "Economic Controls",
    "text": "Economic Controls\nNow, let’s think through control that authors use. First, focus on several economic control variables:\n\nEconomic development (fv8) measured as GDP per capita\nEconomic size (fv10) measured as GDP\nFemale Life expectancy (v64mean)\n\nThus, this is how the authors model the real world. Does it raise any problems?\n\necon_appel_loyle = dagitty('dag {\n                          PCJ -&gt; FDI\n                          EconomicDvelopment -&gt; PCJ\n                          EconomicDvelopment -&gt; FDI\n                          EconomicSize -&gt; FDI\n                          EconomicSize -&gt; PCJ\n                          FLifeexpectancy -&gt; FDI\n                          FLifeexpectancy -&gt; PCJ\n                          }')\nplot(econ_appel_loyle)\n\nPlot coordinates for graph not supplied! Generating coordinates, see ?coordinates for how to set your own.\n\n\n\n\n\n\n\n\n\nAgain, let’s rename the variables for the sake of clarity\n\nappel_loyle = appel_loyle %&gt;%\n  rename(econ_development = fv8,\n         econ_size = fv10,\n         flife_exp = v64mean)\n\nNow, let’s set up the multiple linear model! Do the results hold when we add controls?\n\necon_model = lm(fdi ~ pcj + econ_development + econ_size + flife_exp, appel_loyle)\nsummary(econ_model)\n\n\nCall:\nlm(formula = fdi ~ pcj + econ_development + econ_size + flife_exp, \n    data = appel_loyle)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-7348.9  -579.7   151.2   304.2 16072.0 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      -7.637e+02  1.711e+03  -0.446   0.6563    \npcj               1.544e+03  6.440e+02   2.397   0.0186 *  \necon_development  2.753e-03  1.295e-01   0.021   0.9831    \necon_size         7.561e-09  1.533e-09   4.933 3.68e-06 ***\nflife_exp         9.793e+00  3.118e+01   0.314   0.7542    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2438 on 90 degrees of freedom\nMultiple R-squared:  0.3283,    Adjusted R-squared:  0.2985 \nF-statistic:    11 on 4 and 90 DF,  p-value: 2.63e-07"
  },
  {
    "objectID": "ps312-d_05.html#political-controls",
    "href": "ps312-d_05.html#political-controls",
    "title": "OLS Regression",
    "section": "Political Controls",
    "text": "Political Controls\nNow, let’s add political institutions.\n\nDomestic political constraints (fv27)\nPolitical regime (polity2)\n\n\n\n\n\n\n\nCoding Task\n\n\n\nFirst, add them to the DAG\n\ndagitty('dag {\n              PCJ -&gt; FDI\n              EconomicDvelopment -&gt; PCJ\n              EconomicDvelopment -&gt; FDI\n              EconomicSize -&gt; FDI\n              EconomicSize -&gt; PCJ\n              FLifeexpectancy -&gt; FDI\n              FLifeexpectancy -&gt; PCJ\n              ...\n              ...\n                          }') %&gt;%\nplot()\n\nNow, rename the variables, polity2 to regime and fv27 to constraints.\n\nappel_loyle = appel_loyle ...\n  ...(regime = ...,\n      ... = fv27)\n\nExtend the previous model by adding political institutions. Present summary(). Is the main independent variable statistically significant?\n\npol_model = lm(..., appel_loyle)\n...\n\nAdditional task\nInstall and load library texreg, then run the screenreg() function on your model. In your free time feel free to explore htmlreg() for HTML and texreg() for PDF"
  },
  {
    "objectID": "ps312-d_05.html#footnotes",
    "href": "ps312-d_05.html#footnotes",
    "title": "OLS Regression",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nAppel, B.J. and Loyle, C.E., 2012. The economic benefits of justice: Post-conflict justice and foreign direct investment. Journal of Peace Research, 49(5), pp.685-699.↩︎"
  },
  {
    "objectID": "ps312-d_06.html",
    "href": "ps312-d_06.html",
    "title": "Regression Extensions",
    "section": "",
    "text": "Questions regarding Lab Assignment or the class?\n\n\n\nDownload script\n\n\n\nDownload data"
  },
  {
    "objectID": "ps312-d_06.html#fixed-effects",
    "href": "ps312-d_06.html#fixed-effects",
    "title": "Regression Extensions",
    "section": "Fixed Effects",
    "text": "Fixed Effects\nLet’s explore how leader’s tenure is associated with the number of individuals in the government. We start with the simple linear regression.\n\nlm(n_individuals ~ leaderexperience_continuous, whogov) %&gt;%\n  summary()\n\n\nCall:\nlm(formula = n_individuals ~ leaderexperience_continuous, data = whogov)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-28.666  -6.937  -1.937   5.301 109.063 \n\nCoefficients:\n                            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                 23.59948    0.16232  145.39   &lt;2e-16 ***\nleaderexperience_continuous  0.33702    0.01627   20.71   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 11.21 on 9151 degrees of freedom\nMultiple R-squared:  0.04477,   Adjusted R-squared:  0.04467 \nF-statistic: 428.9 on 1 and 9151 DF,  p-value: &lt; 2.2e-16\n\n\n\n\n\n\n\n\nCoding Task\n\n\n\nTake a moment and draw a scatterplot for n_individuals and leaderexperience_continuous. Add a regression line to the plot.\n\n\nNow, let’s add a categorical variable, indep, to the model. By doing so, we assume that the association between the leader’s tenure and the number of individuals in the government differs depending on whether the leader is independent or partisan.\nPractically, this could be done in multiple ways. First, let’s discuss introduction of fixed effects to our model.\n\nmodel_fe = lm(n_individuals ~ leaderexperience_continuous + indep, whogov) \nsummary(model_fe)\n\n\nCall:\nlm(formula = n_individuals ~ leaderexperience_continuous + indep, \n    data = whogov)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-29.437  -7.078  -1.796   5.377 108.632 \n\nCoefficients:\n                            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                 24.01096    0.16605  144.60   &lt;2e-16 ***\nleaderexperience_continuous  0.35700    0.01617   22.08   &lt;2e-16 ***\nindepIndependent            -3.02909    0.29988  -10.10   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 11.06 on 9126 degrees of freedom\n  (24 observations deleted due to missingness)\nMultiple R-squared:  0.05649,   Adjusted R-squared:  0.05628 \nF-statistic: 273.2 on 2 and 9126 DF,  p-value: &lt; 2.2e-16\n\n\nWe will use ggeffects library for visualization of regression with the fixed effects. This is sort of an addition to ggplot2 library from tidyverse. Don’t forget to install it using install.packages()!\n\nlibrary(ggeffects)\n\nThen, visualize the result. What can we see?\n\nggpredict(model_fe, terms = c(\"leaderexperience_continuous\", \"indep\")) %&gt;%\n  plot()\n\n\n\n\n\n\n\n\nLet’s customize the plot. It should be relatively straightforward given we know ggplot functions. Details for the customization of plot() function can be found on ggeffects website.\n\nggpredict(model_fe, terms= c(\"leaderexperience_continuous\", \"indep\")) %&gt;%\n  plot(show_ci = F) +\n  labs(title = \"Fixed Effects Regression\",\n       x = \"Tenure of a Leader\",\n       y = \"Number of Individuals in a Cabinet\",\n       color = \"Leader's Status\") +\n  theme_bw()\n\n\n\n\n\n\n\n\nSome common fixed effects include:\n\nCountry/Region/State\nIndividual leaders/Parties\nYear/Time\nPolicy presence or absence\n\nBy introducing fixed effects, we are able to control for unobserved confounders that vary across the units (not within!)."
  },
  {
    "objectID": "ps312-d_06.html#interactions",
    "href": "ps312-d_06.html#interactions",
    "title": "Regression Extensions",
    "section": "Interactions",
    "text": "Interactions\nOften dummy variables are used to introduce an interaction term in the model. We will explore the association between Perceptions_of_corruption and number of people in the cabinet (n_individuals) depending on the independence of the party leader.\nThe task isn’t trivial as now we planning to use data from two datasets, Let’s subset those.\nLoad the World Happiness Report we used in the First Meeting.\n\nwhr = read.csv(\"data/WHR.csv\")\n\nLet’s prepare the data\n\nwhr_subset = whr %&gt;%\n  select(Country_name, Perceptions_of_corruption)\n\nwhogov_subset = whogov %&gt;%\n  filter(year == 2021) %&gt;%\n  select(country_name, n_individuals, indep)\n\nNow, we are merging them.\n\nwhr_whogov = whr_subset %&gt;%\n  left_join(whogov_subset, by = c(\"Country_name\" = \"country_name\")) \n\nCheck the result\n\nhead(whr_whogov)\n\n  Country_name Perceptions_of_corruption n_individuals    indep\n1      Finland                     0.182            23 Partisan\n2      Denmark                     0.196            24 Partisan\n3      Iceland                     0.668            15 Partisan\n4       Israel                     0.708            33 Partisan\n5  Netherlands                     0.379            18 Partisan\n6       Sweden                     0.202            26 Partisan\n\n\nNow, to interact variables we need to use asterisk *, i.e. multiplication.\n\nmodel_in = lm(Perceptions_of_corruption ~ n_individuals * indep, whr_whogov)\nsummary(model_in)\n\n\nCall:\nlm(formula = Perceptions_of_corruption ~ n_individuals * indep, \n    data = whr_whogov)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.54000 -0.05737  0.04300  0.10864  0.24382 \n\nCoefficients:\n                                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                     0.575192   0.061646   9.331 5.59e-16 ***\nn_individuals                   0.004818   0.002151   2.240   0.0269 *  \nindepIndependent                0.386220   0.159570   2.420   0.0170 *  \nn_individuals:indepIndependent -0.010703   0.005501  -1.946   0.0540 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1737 on 123 degrees of freedom\n  (10 observations deleted due to missingness)\nMultiple R-squared:  0.08324,   Adjusted R-squared:  0.06088 \nF-statistic: 3.723 on 3 and 123 DF,  p-value: 0.01326\n\n\nLet’s plot the result.\n\nggpredict(model_in, terms= c(\"n_individuals\", \"indep\")) %&gt;%\n  plot(show_ci = FALSE) +\n  labs(title = \"Regression with Interaction Term\",\n       x = \"Number of Individuals in a Cabinet\",\n       y = \"Perception of Corruption\",\n       color = \"Leader's Status\") +\n  theme_bw()\n\n\n\n\n\n\n\n\nAnd you can easily simulate the data (i.e., calculate the marginal effect) using ggpredict(). For example,\n\nggpredict(model_in, terms= c(\"n_individuals [12]\", \"indep [Independent]\"))\n\n# Predicted values of Perceptions_of_corruption\n\nn_individuals | Predicted |     95% CI\n--------------------------------------\n           12 |      0.89 | 0.71, 1.07"
  },
  {
    "objectID": "ps312-d_07.html",
    "href": "ps312-d_07.html",
    "title": "…",
    "section": "",
    "text": "ggally\npresenting results of regression"
  }
]